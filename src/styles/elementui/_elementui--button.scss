// ************************************************************
// _elementui--button
// ************************************************************

.el-button {
    @each $length, $value in $button-length {
        &.is_#{$length} {
            min-width: $value;
        }
    }
    @each $size, $value in $button-size {
        $i: index($button-size, $size $value);
        &.el-button--#{$size} {
            height: $value;
            @if($i == 4) {
                padding-left: #{$i * 5px + 10px};
                padding-right: #{$i * 5px + 10px};
                & > span {
                    font-size: 1rem;
                }
            } @else {
                padding-left: #{$i * 5px + 5px};
                padding-right: #{$i * 5px + 5px};
            }
            @if ($size == mini) {
                & [class*="el-icon"] {
                    font-size: 1rem;
                }
                & > span {
                    font-size: 0.75rem;
                }
                & .svg-icon {
                    @include size(0.75rem !important);
                }
            }
            & > span {
                line-height: #{$value - 2};
            }
        }
    }
}





@mixin el-button($name, $status, $bg_color, $border_color, $text_color) {
    @if $status == default {
        .el-button--#{$name},
        .el-button--#{$name}:not(.is-disabled):focus {
            background-color: $bg_color;
            border-color: $border_color;
            color: $text_color;
        }
    } @else {
        .el-button--#{$name} {
            &:not(.is-disabled):#{$status} {
                background-color: $bg_color;
                border-color: $border_color;
                color: $text_color;
            }
        }
    }
}
@mixin el-button--plain($name, $status, $bg_color, $border_color, $text_color) {
    @if $status == default {
        .el-button--#{$name}.is-plain,
        .el-button--#{$name}.is-plain:not(.is-disabled):focus {
            background-color: $bg_color;
            border-color: $border_color;
            color: $text_color;
        }
    } @else {
        .el-button--#{$name}.is-plain {
            &:not(.is-disabled):#{$status} {
                background-color: $bg_color;
                border-color: $border_color;
                color: $text_color;
            }
        }
    }
}

.button-group {
  border-top: 1px solid border_color(warning);
  font-size: 0;
  line-height: 0;
  padding-top: 15px;
  text-align: center;
}

.el-button {
    border-radius: border_radius(default);
    box-shadow: 0 20px 30px -10px rgba(107, 87, 89, 0.1), inset 0 -1px 0 0 rgba(107, 87, 89, 0.3), inset 0 1px 0 0 #ffffff;
    border-style: solid;
    border-width: 1px;
    cursor: pointer;
    font-size: 0;
    line-height: 0;
    padding: 0 15px;
    transition: all 0.2s linear;
    & + .el-button {
        margin-left: 6px;
    }
    & [class*="el-icon"] {
        font-size: 1.25rem;
        fill: currentColor;
    }
    & .svg-icon {
        @include size(1.25rem !important);
        & + .el-button__text {
            margin-left: 5px;
        }
    }
    & > span {
        align-items: center;
        display: flex;
        font-size: 1rem;
        justify-content: center;
    }
    & > .el-icon-loading {
        display: none;
        & + span {
            margin-left: 0;
        }
    }
    &:before {
        display: none;
    }
}
.el-button--small,
.el-button--mini {
    & > span {
        font-size: 0.875rem;
    }
}

.el-button.is-disabled,
.el-button.is-disabled:focus,
.el-button.is-disabled:hover {
    background-color: #f2f2f2;
    border-color: border_color(default);
    color: text_color(default);
}





// @include el-button(default, default, bg_color(weak), border_color(default), text_color(default));
// @include el-button(default, hover, darken(bg_color(weak), 8%), darken(border_color(default), 8%), text_color(default));

// @include el-button(primary, default, bg_color(warning), border_color(warning), text_color(default_invert));
// @include el-button(primary, hover, darken(bg_color(warning), 8%), darken(border_color(warning), 8%), text_color(default_invert));

// @include el-button--plain(primary, default, lighten(bg_color(accent), 25.5%), darken(border_color(accent), 12%), darken(text_color(accent), 12%));
// @include el-button--plain(primary, hover, bg_color(accent), border_color(accent), text_color(default_invert));

// @include el-button--plain(alert, default, lighten(bg_color(alert), 28%), border_color(alert), text_color(alert));
// @include el-button--plain(alert, hover, lighten(bg_color(alert), 8%), lighten(border_color(alert), 8%), text_color(default_invert));
